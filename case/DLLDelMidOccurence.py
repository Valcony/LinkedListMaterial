# -*- coding: utf-8 -*-
"""C14230230-pertemuan4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AcN3s7bfXRd56Wbv9JS-lClE5nYGBsY8
"""

class Node():
  def __init__(self, val1, val2):
    self.data = val1
    self.id = val2
    self.next = None
    self.prev = None

class DLL():
  def __init__(self):
    self.head = None
    self.tail = None

  def add(self, data, id):
    newNode = Node(data, id)
    if (self.head == None):
      self.head = newNode
      self.tail = newNode
    else:
      temp = self.head
      while(temp.next != None):
        temp = temp.next
      temp.next = newNode
      newNode.prev = temp
      self.tail = newNode

  def hapus(self, node):
        nodeBefore = node.prev
        nodeAfter = node.next
        if nodeBefore is not None:
            nodeBefore.next = nodeAfter
        else:
            self.head = nodeAfter
        if nodeAfter is not None:
            nodeAfter.prev = nodeBefore
        else:
            self.tail = nodeBefore

  def deleteMiddleOccurrence(self):
    if self.head is None:
      return
    temp = self.head
    while temp:
            current = self.head
            count = 0
            while current:  # Iterasi hitung duplikat
                if current.data == temp.data:
                    count += 1
                current = current.next
            if count > 1 and count % 2 != 0: # Jika ganjil
                current = self.head
                median = count // 2 + 1
                index = 0
                while current: # Iterasi sampe median utk dihapus
                    if current.data == temp.data:
                        index += 1
                    if index == median:
                        self.hapus(current)
                        break
                    current = current.next
                temp = temp.next
            temp = temp.next


  def mundurDLL(self):
    temp = self.tail
    while temp.prev != None:
      print(str(temp.data)+" "+str(temp.id), "<--- ", end="")
      temp = temp.prev
    print(str(self.head.data)+" "+str(self.head.id))

  def printDLL(self):
    temp = self.head
    while temp.next != None:
      print(str(temp.data)+" "+str(temp.id), "---> ", end="")
      temp = temp.next
    print(str(temp.data)+" "+str(temp.id))

list = DLL()
list.add(1, 1)
list.add(1, 2)
list.add(1, 3)
list.add(1, 4)
list.add(1, 5)
# list.add(1, 6)
list.deleteMiddleOccurrence()
list.printDLL()
list.mundurDLL()
